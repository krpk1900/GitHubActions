# release/**ブランチにpushされると、リリース用のPRを自動で生成するためのJob
name: git-pr-release
on:
  push:
    branches:
      - "release/**"
jobs:
  git-pr-release:
    runs-on: ubuntu-latest
    steps:
      # ソースコードをランナーにコピーする
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # Rubyのセットアップ
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.1
      # sns/aaa から release/bbb へのpushの場合、release/bbbを変数に保存する
      - name: Set up base branch name
        id: base_branch
        run: echo "::set-output name=branch_name::${GITHUB_REF#refs/heads/}"
      # release/bbb から release/ccc へのPRが存在する場合、release/cccを変数に保存する。存在しない場合はmainを保存する
      - name: Set up head branch name
        id: head_branch
        run: |
          BASE_BRANCH=${{ steps.base_branch.outputs.branch_name }}
          HEAD_BRANCH=$(gh pr list --head $BASE_BRANCH --json baseRefName --jq '.[0].baseRefName')
          if [[ -n "$HEAD_BRANCH" ]]; then
            echo "Found PR from $BASE_BRANCH to $HEAD_BRANCH"
            echo "::set-output name=branch_name::$HEAD_BRANCH"
          else
            echo "No PR found from $BASE_BRANCH to release/**. Setting to main"
            echo "::set-output name=branch_name::main"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 調査のため
      - name: Debug
        run: |
          echo "BASE_BRANCH: ${{ steps.base_branch.outputs.branch_name }}"
          echo "HEAD_BRANCH: ${{ steps.head_branch.outputs.branch_name }}"
      # git-pr-releaseをインストールする
      - name: Install git-pr-release
        run: gem install --no-document git-pr-release
      # git-pr-releaseを実行し、結果をoutput.txtに保存する
      - name: Run git-pr-release and capture output
        id: gitpr
        run: |
          git-pr-release 2>&1 | tee output.txt
          echo "::set-output name=exit_code::$?"
        continue-on-error: true
        env:
          GIT_PR_RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: ${{ steps.head_branch.outputs.branch_name }}
          GIT_PR_RELEASE_BRANCH_STAGING: ${{ steps.base_branch.outputs.branch_name }}
          GIT_PR_RELEASE_LABELS: リリース用
          GIT_PR_RELEASE_TEMPLATE: .github/RELEASE_PULL_REQUEST_TEMPLATE.erb
      # 既知のエラーの場合は成功とみなすために、git-pr-releaseの結果に特定のエラーメッセージが含まれているかを確認する
      - name: Check for specific error message
        id: check
        run: |
          if [[ "${{ steps.gitpr.outputs.exit_code }}" == "0" ]]; then
            echo "git-pr-release succeeded, setting job status to succeed."
            echo "::set-output name=status::succeed"
          elif grep -q "No pull requests to be released" output.txt; then
            echo "Found the specific error, setting job status to succeed."
            echo "::set-output name=status::succeed"
          else
            echo "Did not find the specific error or success, setting job status to fail."
            echo "::set-output name=status::fail"
          fi
      # 既知ではないエラーが発生した場合は、ジョブを失敗させる
      - name: Conditionally fail the job
        run: |
          if [[ "${{ steps.check.outputs.status }}" == "fail" ]]; then
            exit 1
          fi
